<!-- 
<h1>Pages#welcome</h1>
<p>Find me in app/views/pages/welcome.html.erb</p>
 -->

<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>

<div id="demo-full-width-background">
  <div class="row">
    <div class="med-5 large-5 columns">
      <div id="sales-copy-container">
        <h3 id="headline">Burn it into your memory!</h3>
        <p> Commit anything to long-term memory efficiently. Embe.rs trains you in multiple, mobile-friendly formats and uses spaced repetition algorithms to surface the facts you need to review when you're most likely to forget them. Try it out now  <i class="fa fa-long-arrow-right"></i>  </p>
      </div>

    </div>
    <div class="small-12 med-7 large-7 columns">
      <div id="broswer-box">
        <div class="browser-circle"></div>
        <div class="browser-circle"></div>
        <div class="browser-circle"></div>
        <div id="demo-card-container" ></div>
      </div>
    </div>
  </div>
</div>



<script type="text/javascript">
 
var attemptArray = [];
var sampleFacts = <%=raw @sample_facts %>;
var card_counter = 0;
var mcTemplate = '<h2 id="demo-card-header">&nbsp</h2><div id="demo-multiple-choice-basket"><div id="demo-mc-container"><ul></ul><br /></div></div>'


var freeTemplate = '<h2 id="demo-card-header">&nbsp</h2><input id="demo-free-text-field" autofocus></input>'

var puzzleTemplate = '<h2 id="demo-card-header">&nbsp</h2><div id="demo-answer-canvas"></div><div id="demo-answer-basket"></div>'


// toggle icon on window resize

if($(window).width() > 1024) {     
        $('#sales-copy-container .fa').removeClass('fa-level-down')
        $('#sales-copy-container .fa').addClass('fa-long-arrow-right')

      } else {
          $('#sales-copy-container .fa').removeClass('fa-long-arrow-right')
        $('#sales-copy-container .fa').addClass('fa-level-down')
        
    }

$( window ).resize(
  function(){
    if($(window).width() > 1024) {     
        $('#sales-copy-container .fa').removeClass('fa-level-down')
        $('#sales-copy-container .fa').addClass('fa-long-arrow-right')

      } else {
          $('#sales-copy-container .fa').removeClass('fa-long-arrow-right')
        $('#sales-copy-container .fa').addClass('fa-level-down')
        
    }


    });



// These click handlers are for the puzzle format
$("#demo-card-container").on('click', "#demo-answer-canvas .demo-answer-object",
  function(){
    var $this = $(this);
    $("#demo-answer-basket").append(this);
    var delete_index = attemptArray.indexOf($this.text());
    attemptArray.splice(delete_index, 1);
  }
)


$("#demo-card-container").on('click', "#demo-answer-basket .demo-answer-object",
  function(){
    var $this = $(this);
    $("#demo-answer-canvas").append(this);
    attemptArray.push($this.text());
    console.log(checkPuzzleAnswer(attemptArray));
    // var answer_correct = check_answer(attemptArray);
    if(checkPuzzleAnswer(attemptArray)) {
      $("#demo-answer-canvas > div").css({"border": "1px solid #669900", "background-color": "#9DC658", "color" : "white"});
      $("#onboarding").remove();
      $("#demo-card-container").append("<p id='onboarding'>Great job!</p>")
      setTimeout(function(){
        card_counter = card_counter+ 1;
        showRandomCard();
      }, 2500);
    } else if(attemptArray.length === (sampleFacts[card_counter-1].definition).length){
      $("#onboarding").remove();
      $("#demo-card-container").append("<p id='onboarding'>Hmm, that doesn't look quite right.  Try <strong>"+sampleFacts[card_counter-1].definition.join("")+"</strong></p>")
    } 
  }
)

// These are handlers for the multiple choice format
$("#demo-card-container").on('click', ".demo-mc-correct-answer",
  function(){
    var $this = $(this);
    $this.css({"border": "1px solid #669900", "background-color": "#9DC658", "color" : "white"})
    setTimeout(function(){
      card_counter = card_counter+ 1;
      showRandomCard();
    }, 2000)
  }

)


$("#demo-card-container").on('click', ".demo-mc-decoy",
  function(){
    var $this = $(this);
    $this.css({"border": "1px solid #a53918", "background-color": "#d94c21", "color" : "white"})
    setTimeout(function(){
      $(".demo-mc-correct-answer").css({"border": "1px solid #669900", "background-color": "#9DC658", "color" : "white"})
    }, 900)
    setTimeout(function(){
      card_counter = card_counter+ 1;
      showRandomCard();
    }, 2000)
  }
)


// Handlers for the free response format
// window.freeResponseTimer= setTimeout(function(){
//   console.log("delay!")  
// }, 3000);

$("#demo-card-container").on('keydown', "#demo-free-text-field", function(){
  console.log("about to set timeout.....");
  endAndStartTimer();
}
  )

// Setup functions for handing each card type

var puzzle = function(){
  $("#demo-card-container").append(puzzleTemplate);
  aCardDefinition = shuffle(sampleFacts[card_counter].definition.slice(0));
  
  for(i = 0; i < aCardDefinition.length; i++){

    var $div = $('<div class="demo-answer-object answer">'+aCardDefinition[i]+'</div>')
    var header = sampleFacts[card_counter].term;
    $("#demo-answer-basket").append($div);
    $("#demo-card-header").text(header);
  };
  card_counter = card_counter+ 1;

};

var free = function(){
  $("#demo-card-container").append(freeTemplate);
  $("#demo-card-header").text(sampleFacts[card_counter].term);

};

var mc = function(){
  $("#demo-card-container").append(mcTemplate);
  $("#demo-card-header").text(sampleFacts[card_counter].term);
  var decoyItemHtml = [];
  for (var i = 0; i < sampleFacts.length; i++) {
    // $("#demo-multiple-choice-basket").append('<li class="demo-mc-decoy">'+sampleFacts[i].definition+'</li>')
    var decoyString = sampleFacts[i].definition.join("")
      normalizeMultipleChoice(decoyString);
      shuffle(decoyItemHtml);
      decoyItemHtml.push('<li class="demo-mc-decoy">'+decoyString+'</li>');

      // decoyItemHtml.push(sampleFacts[i]);
  };
  var correctAnswer = '<li class="demo-mc-decoy">'+sampleFacts[card_counter].definition.join("")+'</li>'
  var correctAnswerWithCorrectClass = '<li class="demo-mc-correct-answer">'+sampleFacts[card_counter].definition.join("")+'</li>'
  for(i in decoyItemHtml ){
    if(decoyItemHtml[i] != correctAnswer){
      console.log(decoyItemHtml[i])
      console.log(correctAnswer)
      if(decoyItemHtml[i].length > 29)
        $("#demo-mc-container").append(decoyItemHtml[i]);
    } else {
      $("#demo-mc-container").append(correctAnswerWithCorrectClass);
    }
  }
  card_counter = card_counter+ 1;
};

// --------------------


var clearOldCard = function() {
  $("#demo-card-container").empty();
  attemptArray = [];

};

var normalizeMultipleChoice = function(string){
  string.replace(",,","_");
  string.replace(",","");
  string.replace("_",",");
  return string;
};


var checkPuzzleAnswer = function(attemptArray) {
  var joined_array = attemptArray.join("");
  var answer = (sampleFacts[card_counter-1].definition);
  return joined_array == answer.join("");
 
}

var checkAndPostFreeResponseAnswer = function(){
  console.log("CHecking answer....");
  var response = $("#demo-free-text-field").val();
  var answer = (sampleFacts[card_counter].definition.join("").replace('"', "'"));
  console.log("answer: "+answer);
  console.log("response: "+response);
  if(response == answer){
    $("#demo-free-text-field").css({"background-color": "#9DC658","color":"white" });
  } else {
    $("#demo-free-text-field").css({"background-color": "#d94c21","color":"white"});
  }
  
  setTimeout(function(){
    card_counter = card_counter+ 1;
    showRandomCard();
  }, 2000)
};

function shuffle(array) {
    for (var i = array.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    return array;
}
// Added this to be able to detect when a user is likely on mobile.
var checkIfMobile = function(){
if($(window).width() > 739) {     
    window.isMobile = false;
  } else {
    window.isMobile = true;
}
};




function showRandomCard(){

  checkIfMobile();
  if(card_counter < sampleFacts.length && isMobile != true) {
    var cardTypes =[puzzle, free, mc];
    var index = Math.floor(Math.random()*3);
    clearOldCard();
    cardTypes[index]();
  } else if( card_counter < sampleFacts.length ) {
    var cardTypes =[puzzle, mc];
    var index = Math.floor(Math.random()*2);
    clearOldCard();
    cardTypes[index]();
  } else {
    $("#sign-up-form h2").first().text("Create an account and save your progress: ");
    $("#sign-up-form h2").eq(1).empty();
    $("#sign-up-form").foundation('reveal', 'open');
  }
};

showRandomCard();

var submitFormTimer;

// If the enter key is pressed, stop the time and submit the question immediately.
$(document).keypress(function(e) {
    if(e.which == 13) {
        stopTimerAndSubmitAnswer();
    }
});

function stopTimerAndSubmitAnswer(){
  window.clearTimeout(submitFormTimer);
  if($(".demo-mc-decoy").length >0){
    // Add mc check answer
  } else if($("#demo-free-text-field").length > 0){
    checkAndPostFreeResponseAnswer();
  }  else if($("#demo-answer-canvas").length > 0){
    $("#demo-answer-basket").empty()

    $("#demo-answer-canvas").empty().append("<div class='demo-answer-object'>"+sampleFacts[card_counter-1].definition.join("")+"</div>")
    setTimeout(function(){
        clearOldCard();
        showRandomCard();
      },3500);
  }
};


function endAndStartTimer() {
  window.clearTimeout(submitFormTimer);
  //var millisecBeforeRedirect = 10000; 
  submitFormTimer = window.setTimeout(checkAndPostFreeResponseAnswer,1000); 
}


</script>









