<!-- 
<h1>Pages#welcome</h1>
<p>Find me in app/views/pages/welcome.html.erb</p>
 -->

<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>

<div id="full-width-background">
  <div class="row">
    <div class="small-1 med-1 large-1 columns">&nbsp;</div>
    <div id="card-container" class="small-10 med-8 large-8 columns">
    <div class="small-1 med-1 large-1 columns">&nbsp;</div>
  </div>
</div>



<script type="text/javascript">
 
var attemptArray = [];
var sampleFacts = <%=raw @sample_facts %>;
var card_counter = 0;
var mcTemplate = '<h2 id="card-header">&nbsp</h2></div><div id="multiple-choice-basket"><ul></ul></div>'


var freeTemplate = '<h2 id="card-header">&nbsp</h2><input id="free-text-field" autofocus></input>'

var puzzleTemplate = '<h2 id="card-header">&nbsp</h2><div id="answer-canvas"></div><div id="answer-basket"></div>'

// These click handlers are for the puzzle format
$("#card-container").on('click', "#answer-canvas .answer-object",
  function(){
    var $this = $(this);
    $("#answer-basket").append(this);
    var delete_index = attemptArray.indexOf($this.text());
    attemptArray.splice(delete_index, 1);
  }
)


$("#card-container").on('click', "#answer-basket .answer-object",
  function(){
    var $this = $(this);
    $("#answer-canvas").append(this);
    attemptArray.push($this.text());
    console.log(checkPuzzleAnswer(attemptArray));
    // var answer_correct = check_answer(attemptArray);
    if(checkPuzzleAnswer(attemptArray) && card_counter < sampleFacts.length) {
      $("#answer-canvas > div").css({"border": "1px solid #669900", "background-color": "#89c43e", "color" : "white"});
      $.ajax({
        type: "POST",
        data: "",
        url: "",
        success: setTimeout(function(){
          clearOldCard();
          showRandomCard();
          
          }, 2000)
      }); 
    }
  }
)

// These are handlers for the multiple choice format
$("#card-container").on('click', ".mc-correct-answer",
  function(){
    var $this = $(this);
    $this.css({"border": "1px solid #669900", "background-color": "#89c43e", "color" : "white"})
    $.ajax({
        type: "POST",
        data: "",
        url: "",
        success: setTimeout(function(){
          clearOldCard();
          showRandomCard();
          
          }, 2000)
      }); 
  }

)


$("#card-container").on('click', ".mc-decoy",
  function(){
    var $this = $(this);
    $this.css({"border": "1px solid red", "background-color": "red", "color" : "white"})
    $.ajax({
        type: "POST",
        data: "",
        url: "",
        success: setTimeout(function(){
          clearOldCard();
          showRandomCard();
          
          }, 1000)
      });
  }
)


// Handlers for the free response format
// window.freeResponseTimer= setTimeout(function(){
//   console.log("delay!")  
// }, 3000);

$("#card-container").on('keydown', "#free-text-field", function(){
  console.log("about to set timeout.....");
  endAndStartTimer();
}
  )

// Setup functions for handing each card type

var puzzle = function(){
  $("#card-container").append(puzzleTemplate);
  aCardDefinition = shuffle(sampleFacts[card_counter].definition.slice(0));
  
  for(i = 0; i < aCardDefinition.length; i++){

    var $div = $('<div class="answer-object answer">'+aCardDefinition[i]+'</div>')
    var header = sampleFacts[card_counter].term;
    $("#answer-basket").append($div);
    $("#card-header").text(header);
  };
  card_counter = card_counter+ 1;

};

var free = function(){
  $("#card-container").append(freeTemplate);
  $("#card-header").text(sampleFacts[card_counter].term);


};

var mc = function(){
  $("#card-container").append(mcTemplate);
  $("#card-header").text(sampleFacts[card_counter].term);
  var decoyItemHtml = [];
  for (var i = 0; i < sampleFacts.length; i++) {
    // $("#multiple-choice-basket").append('<li class="mc-decoy">'+sampleFacts[i].definition+'</li>')
    var decoyString = sampleFacts[i].definition.join("")
      normalizeMultipleChoice(decoyString);
      shuffle(decoyItemHtml);
      decoyItemHtml.push('<li class="mc-decoy">'+decoyString+'</li>');

      // decoyItemHtml.push(sampleFacts[i]);
  };
  var correctAnswer = '<li class="mc-decoy">'+sampleFacts[card_counter].definition.join("")+'</li>'
  var correctAnswerWithCorrectClass = '<li class="mc-correct-answer">'+sampleFacts[card_counter].definition.join("")+'</li>'
  for(i in decoyItemHtml ){
    if(decoyItemHtml[i] != correctAnswer){
      console.log(decoyItemHtml[i])
      console.log(correctAnswer)
      if(decoyItemHtml[i].length > 29)
        $("#multiple-choice-basket").append(decoyItemHtml[i]);
    } else {
      $("#multiple-choice-basket").append(correctAnswerWithCorrectClass);
    }
  }
  card_counter = card_counter+ 1;
};

// --------------------


var clearOldCard = function() {
  $("#card-container").empty();
  attemptArray = [];

};

var normalizeMultipleChoice = function(string){
  string.replace(",,","_");
  string.replace(",","");
  string.replace("_",",");
  return string;
};


var checkPuzzleAnswer = function(attemptArray) {
  var joined_array = attemptArray.join("");
  var answer = (sampleFacts[card_counter-1].definition);
  console.log("joined_array: "+joined_array);
  console.log("answer: "+answer.join(""));
  return joined_array == answer.join("");
 
}

var checkAndPostFreeResponseAnswer = function(){
  console.log("CHecking answer....");
  var response = $("#free-text-field").val();
  var answer = (sampleFacts[card_counter].definition.join(""));
  console.log("answer: "+answer);
  console.log("response: "+response);
  if(response == answer){
    $("#free-text-field").css("background-color", "green");
  } else {
    $("#free-text-field").css("background-color", "red");
  }
  $.ajax({
    type: "POST",
    data: (response == answer),
    url: "",
    success: setTimeout(function(){
      clearOldCard();
      card_counter = card_counter+ 1;
      showRandomCard();
      }, 2000)
  }); 
};

function shuffle(array) {
    for (var i = array.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    return array;
}

function showRandomCard(){
  var cardTypes =[puzzle, free, mc];
  var index = Math.floor(Math.random()*3);
  clearOldCard();
  cardTypes[index]();
};

showRandomCard();

var submitFormTimer;

function endAndStartTimer() {
  window.clearTimeout(submitFormTimer);
  //var millisecBeforeRedirect = 10000; 
  submitFormTimer = window.setTimeout(checkAndPostFreeResponseAnswer,1000); 
}

</script>









